# 指定语言环境
language: node_js
# 指定需要sudo权限
sudo: required
# 指定node_js版本
node_js: 
  - 7.9.0
# 指定缓存模块，可选。缓存可加快编译速度。
cache:
  directories:
    - node_modules

# 指定博客源码分支，因人而异。hexo博客源码托管在独立repo则不用设置此项
branches:
  only:
    - develop 

before_install:
  - openssl aes-256-cbc -K $encrypted_2d351329592f_key -iv $encrypted_2d351329592f_iv -in u672au547du540d.enc -out ~/.ssh/id_rsa -d
  - chmod 400 ~/.ssh/id_rsa
  - echo -e "Host ${cloud_host}\n\tStrictHostKeyChecking no\n" >> ~/.ssh/config
  - npm install -g hexo-cli

# Start: Build Lifecycle
install:
  - npm install
  - npm install hexo-deployer-git --save

# 执行清缓存，生成网页操作
script:
  - hexo clean
  - hexo generate
  # - export HEXO_ALGOLIA_INDEXING_KEY=3ab5f2d73e3d76407cf2ff890023a7ec
  # - hexo algolia

# 设置git提交名，邮箱；替换真实token到_config.yml文件，最后depoy部署
after_script:
  - git config user.name "noppt"
  - git config user.email "1041036986@qq.com"
  # 替换同目录下的_config.yml文件中gh_token字符串为travis后台刚才配置的变量，注意此处sed命令用了双引号。单引号无效！
  - sed -i "s/gh_token/${GH_TOKEN}/g" ./_config.yml
  - hexo deploy
# End: Build LifeCycle

after_success:
# 没有修改过端口的，可以用这个，上传目录要加 -r 参数
- scp -o stricthostkeychecking=no -r ./public root@$cloud_host:/usr/share/nginx/html/blog_test
# 由于我修改了默认的port，所以在这里也进行了加密处理
# - scp -o stricthostkeychecking=no -P $PORT -r 要上传的文件或目录 用户@域名或IP:/路径